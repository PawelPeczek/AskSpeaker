-- MySQL Script generated by MySQL Workbench
-- Sat Feb 24 14:24:13 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema AskSpeakerDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema AskSpeakerDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `AskSpeakerDB` DEFAULT CHARACTER SET utf8 ;
USE `AskSpeakerDB` ;

-- -----------------------------------------------------
-- Table `AskSpeakerDB`.`UserRoles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AskSpeakerDB`.`UserRoles` (
  `UserRoleID` INT NOT NULL AUTO_INCREMENT,
  `RoleName` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`UserRoleID`),
  UNIQUE INDEX `UserRoleID_UNIQUE` (`UserRoleID` ASC),
  UNIQUE INDEX `RoleName_UNIQUE` (`RoleName` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AskSpeakerDB`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AskSpeakerDB`.`Users` (
  `UserID` INT NOT NULL AUTO_INCREMENT,
  `UserName` VARCHAR(50) NOT NULL,
  `Password` BINARY(32) NOT NULL,
  `Active` BIT(1) NOT NULL DEFAULT 0,
  `UserRoleID` INT NOT NULL,
  PRIMARY KEY (`UserID`),
  UNIQUE INDEX `UserID_UNIQUE` (`UserID` ASC),
  UNIQUE INDEX `UserName_UNIQUE` (`UserName` ASC),
  INDEX `fk_Users_UserRoles_idx` (`UserRoleID` ASC),
  CONSTRAINT `fk_Users_UserRoles`
    FOREIGN KEY (`UserRoleID`)
    REFERENCES `AskSpeakerDB`.`UserRoles` (`UserRoleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AskSpeakerDB`.`Events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AskSpeakerDB`.`Events` (
  `EventId` INT NOT NULL AUTO_INCREMENT,
  `EventHash` VARCHAR(6) NOT NULL,
  `EventName` VARCHAR(120) NOT NULL,
  `EventDesc` VARCHAR(350) NULL,
  `SpeakerName` VARCHAR(45) NULL,
  `SpeakerSurname` VARCHAR(45) NULL,
  `Closed` BIT(1) NOT NULL DEFAULT 0,
  `UserID` INT NOT NULL,
  PRIMARY KEY (`EventId`),
  UNIQUE INDEX `EventId_UNIQUE` (`EventId` ASC),
  UNIQUE INDEX `EventHash_UNIQUE` (`EventHash` ASC),
  INDEX `fk_Events_Users1_idx` (`UserID` ASC),
  CONSTRAINT `fk_Events_Users1`
    FOREIGN KEY (`UserID`)
    REFERENCES `AskSpeakerDB`.`Users` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AskSpeakerDB`.`Questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AskSpeakerDB`.`Questions` (
  `QuestionID` INT NOT NULL AUTO_INCREMENT,
  `QuestionContent` VARCHAR(350) NOT NULL,
  `Anulled` BIT(1) NOT NULL DEFAULT 0,
  `EventID` INT NOT NULL,
  `MergedWith` INT NULL,
  PRIMARY KEY (`QuestionID`),
  UNIQUE INDEX `Questions_UNIQUE` (`QuestionID` ASC),
  INDEX `fk_Questions_Events1_idx` (`EventID` ASC),
  INDEX `fk_Questions_Questions1_idx` (`MergedWith` ASC),
  CONSTRAINT `fk_Questions_Events1`
    FOREIGN KEY (`EventID`)
    REFERENCES `AskSpeakerDB`.`Events` (`EventId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Questions_Questions1`
    FOREIGN KEY (`MergedWith`)
    REFERENCES `AskSpeakerDB`.`Questions` (`QuestionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AskSpeakerDB`.`Votes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AskSpeakerDB`.`Votes` (
  `VoteID` INT NOT NULL AUTO_INCREMENT,
  `Value` TINYINT(1) NOT NULL,
  `QuestionID` INT NOT NULL,
  PRIMARY KEY (`VoteID`),
  INDEX `fk_Votes_Questions1_idx` (`QuestionID` ASC),
  CONSTRAINT `fk_Votes_Questions1`
    FOREIGN KEY (`QuestionID`)
    REFERENCES `AskSpeakerDB`.`Questions` (`QuestionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `AskSpeakerDB`;

DELIMITER $$
USE `AskSpeakerDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AskSpeakerDB`.`Votes_BEFORE_INSERT` BEFORE INSERT ON `Votes` FOR EACH ROW
BEGIN
  IF NEW.Value NOT IN (-1, 1) THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
  END IF;
END;$$

USE `AskSpeakerDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AskSpeakerDB`.`Votes_BEFORE_UPDATE` BEFORE UPDATE ON `Votes` FOR EACH ROW
BEGIN
  IF NEW.Value NOT IN (-1, 1) THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
  END IF;
END;$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
